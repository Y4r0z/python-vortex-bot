import settings
import discord
from discord.ext import commands
from ui.steam_link import LinkView
import lib.vortex_api as Vortex
from ui.setup import SetupView
from ui.balance import SendWallet, PayWarnView, BalanceShareView
from tools.text import formatCoins

def hasRole(member: discord.Member, role_id: int):
    for role in member.roles:
        if role.id == role_id: return True
    return False

def compareRoles(before: discord.Member, after: discord.Member, role_id: int):
    if hasRole(after, role_id) and not hasRole(before, role_id):
        return 1
    elif not hasRole(after, role_id) and hasRole(before, role_id):
        return -1
    return 0

async def manageRole(before: discord.Member, after: discord.Member, role_id: int, privilege_id: int) -> bool:
    """
    True - –∑–∞–∫–æ–Ω—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–µ–π
    False - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é —Ä–æ–ª—å
    """
    diff = compareRoles(before, after, role_id)
    if diff == 0: return False
    try:
        user = await Vortex.GetDiscordUser(before.id)
    except: return True
    steam_id = user['user']['steamId']
    privs = await Vortex.GetUserPrivileges(steam_id)
    if diff == 1:
        if privilege_id in [i['privilege']['id'] for i in privs]:
             p = next(i for i in privs if i['privilege']['id'] == privilege_id)
             if p['activeUntil'] == Vortex.BoostyPrivilegeUntil: return False
        await Vortex.SetUserPrivilege(steam_id, privilege_id)
        return True
    if privilege_id not in [i['privilege']['id'] for i in privs]: return False
    p = next(i for i in privs if i['privilege']['id'] == privilege_id)
    await Vortex.DeleteUserPrivilege(steam_id, p)
    return True
    
async def tryGetUser(interaction: discord.Interaction) -> Vortex.User | None:
    try:
        link = await Vortex.GetDiscordUser(interaction.user.id)
    except:
        await interaction.response.send_message(content='–í—ã –Ω–µ –ø—Ä–∏–≤—è–∑–∞–ª–∏ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –∫ Steam, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/link`, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ.', ephemeral=True)
        return None
    return link['user']

async def checkAdmin(interaction: discord.Interaction):
    if interaction.user.guild_permissions.administrator == False:
        await interaction.response.send_message('–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.', ephemeral=True)
        return False
    return True

def main():
    intents = discord.Intents.default()
    intents.message_content = True
    intents.members = True

    guild = discord.Object(id=settings.GUILD_ID)

    bot = commands.Bot(intents=intents, command_prefix='!')    

    @bot.event
    async def on_ready():
        bot.tree.copy_global_to(guild=guild)
        await bot.tree.sync(guild=guild)

    @bot.event
    async def on_member_update(before: discord.Member, after: discord.Member):
        if not settings.IsSetUp(): return
        if len(before.roles) == len(after.roles): return
        if \
            await manageRole(before, after, settings.Preferences['vip_role_id'], Vortex.PrivilegeTypeId.Vip) or \
            await manageRole(before, after, settings.Preferences['premium_role_id'], Vortex.PrivilegeTypeId.Premium) or \
            await manageRole(before, after, settings.Preferences['legend_role_id'], Vortex.PrivilegeTypeId.Legend):
            ...
        # –ï—Å–ª–∏ –æ–¥–Ω–∞ —Ä–æ–ª—å –∏–∑–º–µ–Ω–Ω–∞, —Ç–æ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –Ω–µ —Ç—Ä–æ–≥–∞—Ç—å. –ò—Å–ø–æ–ª—å–∑—É—é –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å "–ª–µ–Ω–∏–≤—ã—Ö" –≤—ã—Ä–∞–∂–µ–Ω–∏–π –≤ python
        

    @bot.tree.command(name='setup', description='–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –±–æ—Ç–∞ –≤ –¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ')
    @commands.has_permissions(administrator=True)
    async def setupcommand(interaction: discord.Interaction):
        if not (await checkAdmin(interaction)): return
        view = SetupView()
        await interaction.response.send_message(content='–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞', view=view, ephemeral=True)
    
    @bot.tree.command(name='link', description='–ü—Ä–∏–≤—è–∑–∞—Ç—å –≤–∞—à Steam –∞–∫–∫–∞—É–Ω—Ç –∫ Discord')
    async def linkcommand(interaction: discord.Interaction):
        view = LinkView()
        await interaction.response.send_message(
            content='–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –ø—Ä–∏–≤—è–∑–∞—Ç—å –≤–∞—à Steam –∞–∫–∫–∞—É–Ω—Ç.', 
            view=view, 
            ephemeral=True)
    
    @bot.tree.command(name='balance', description='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ –∫–æ–∏–Ω–æ–≤ —É –≤–∞—Å –Ω–∞ —Å—á–µ—Ç—É')
    async def balance(interaction: discord.Interaction):
        user = await tryGetUser(interaction)
        if user is None: return
        balance = await Vortex.GetBalance(user['steamId'])
        await interaction.response.send_message(content=f'–í–∞—à –±–∞–ª–∞–Ω—Å: {formatCoins(balance['value'])}', ephemeral=True, view=BalanceShareView(user=interaction.user, value=balance['value']))
    
    @bot.tree.command(name='pay', description='–ü–µ—Ä–µ–¥–∞—Ç—å –∫–æ–∏–Ω—ã –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
    @discord.app_commands.describe(target="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã –ø–µ—Ä–µ–¥–∞–µ—Ç–µ –∫–æ–∏–Ω—ã", value="–°–∫–æ–ª—å–∫–æ –∫–æ–∏–Ω–æ–≤ –ø–µ—Ä–µ–¥–∞—Ç—å")
    async def balance(interaction: discord.Interaction, target: discord.Member, value: int):
        if target.id == interaction.user.id:
            await interaction.response.send_message(content='–ú—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∫–æ–∏–Ω—ã —Å–∞–º–æ–º—É —Å–µ–±–µ!', ephemeral=True)
            return
        if target.bot:
            await interaction.response.send_message(content='–£ –±–æ—Ç–∞ –Ω–µ—Ç –∫–æ—à–µ–ª—å–∫–∞! üòí', ephemeral=True)
            return
        user = await tryGetUser(interaction)
        if user is None: return
        try:
            user2 = await Vortex.GetDiscordUser(target.id)
        except:
            await interaction.ressponse.send_message(content=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target.mention} –µ—â–µ –Ω–µ —Å–≤—è–∑–∞–ª —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç.', ephemeral=True)
            return
        balance = await Vortex.GetBalance(user['steamId'])
        if value > balance['value']: interaction.response.send_message(content='–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–µ—Ç –∫–æ–∏–Ω–æ–≤ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏.', ephemeral=True)
        try:
            transaction = await Vortex.PayBalance(user['steamId'], user2['user']['steamId'], value)
        except: interaction.response.send_message(content='–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–¥–∞—Ç—å –∫–æ–∏–Ω—ã.', ephemeral=True)
        view = PayWarnView(source=interaction.user, target=target, value=value)
        await interaction.response.send_message(
            content=f'–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ {formatCoins(value)} –∏–≥—Ä–æ–∫—É {target.mention}.\n–û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ: {formatCoins(transaction["source"]["value"])}', 
            ephemeral=True, view=view)
    
    @bot.tree.command(name='wallet', description='–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –∫–æ—à–µ–ª—å–∫–µ')
    async def wallet(interaction: discord.Interaction):
        await SendWallet(interaction)

    bot.run(settings.DISCORD_TOKEN)


if __name__ == '__main__':
    main()